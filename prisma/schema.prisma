generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  email         String          @unique
  password      String
  name          String?
  emailVerified DateTime?
  clients       Client[]
  invoices      Invoice[]
  passwordReset PasswordReset[]
}

model VerificationToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token     String   @unique
  userId    String   @db.ObjectId
  expires   DateTime
  createdAt DateTime @default(now())
}

model PasswordReset {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token     String   @unique
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  expires   DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Client {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  userId   String    @db.ObjectId
  user     User      @relation(fields: [userId], references: [id])
  name     String
  email    String
  phone    String?
  address  String?
  company  String?
  notes    String?
  invoices Invoice[]
}

model Invoice {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  userId      String        @db.ObjectId
  user        User          @relation(fields: [userId], references: [id])
  clientId    String        @db.ObjectId
  client      Client        @relation(fields: [clientId], references: [id])
  title       String
  description String?
  amount      Float
  currency    String
  status      String // PENDING, PAID, OVERDUE
  invoiceDate DateTime
  dueDate     DateTime
  items       InvoiceItem[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model InvoiceItem {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  invoiceId   String   @db.ObjectId
  invoice     Invoice  @relation(fields: [invoiceId], references: [id])
  description String
  quantity    Float
  rate        Float
  total       Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
